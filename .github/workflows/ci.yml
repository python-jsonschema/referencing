name: CI

on:
  push:
    branches-ignore:
      - "wip*"
    tags:
      - "v*"
  pull_request:
  schedule:
    # Daily at 8:33
    - cron: "33 8 * * *"
  workflow_dispatch:

jobs:
  list:
    runs-on: ubuntu-latest
    outputs:
      noxenvs: ${{ steps.noxenvs-matrix.outputs.noxenvs }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - id: noxenvs-matrix
        run: |
          echo >>$GITHUB_OUTPUT noxenvs=$(
            uvx nox --list-sessions --json | jq '[.[].session]'
          )

  ci:
    needs: list
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        noxenv: ${{ fromJson(needs.list.outputs.noxenvs) }}
        posargs: [""]
        include:
          - noxenv: tests-3.13
            posargs: coverage github

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: "recursive"
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libenchant-2-dev
        if: runner.os == 'Linux' && startsWith(matrix.noxenv, 'docs')
      - name: Install dependencies
        run: brew install enchant
        if: runner.os == 'macOS' && startsWith(matrix.noxenv, 'docs')
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: |
            3.9
            3.10
            3.11
            3.12
            3.13
            pypy3.10
          allow-prereleases: true

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Run nox
        run: uvx nox -s "${{ matrix.noxenv }}" -- ${{ matrix.posargs }}

  packaging:
    needs: ci
    runs-on: ubuntu-latest
    environment:
      name: PyPI
      url: https://pypi.org/p/referencing

    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: "recursive"
      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Build our distributions
        run: uv run --frozen --with 'build[uv]' -m build --installer=uv

      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
      - name: Create a Release
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
          generate_release_notes: true
